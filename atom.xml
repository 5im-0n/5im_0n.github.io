<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>mostly javascript</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://31337.it/"/>
  <updated>2024-11-08T20:02:45.110Z</updated>
  <id>http://31337.it/</id>
  
  <author>
    <name>Simon</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Incremental backups with rsync</title>
    <link href="http://31337.it/incremental-backups-with-rsync/"/>
    <id>http://31337.it/incremental-backups-with-rsync/</id>
    <published>2024-02-26T23:00:00.000Z</published>
    <updated>2024-11-08T20:02:45.110Z</updated>
    
    <content type="html"><![CDATA[<p>A cronjob on a server rsyncs all files from different locations to a single folder. Then, that folder gets versioned and backed up again, so that we can go back in time. Optionally, everything can be encrypted and sent to a cloud storage for aditional safety.</p><p>So how does it work? First of all some configurations:</p><p>Let&#39;s make a <code>backup_config.sh</code><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line">BACKUPDISK=/home/backupdisk</span><br><span class="line"></span><br><span class="line">#the backup folder</span><br><span class="line">BACKUPDIR=$BACKUPDISK/backup</span><br><span class="line"></span><br><span class="line">#folders by date and time</span><br><span class="line">ARCHIVEDIR=$BACKUPDISK/archive</span><br><span class="line"></span><br><span class="line">RSYNC_LOCK_FILE=/tmp/rsync.lock</span><br><span class="line"></span><br><span class="line">#this script will populate the archive</span><br><span class="line">INCREMENTAL=/home/s2/bin/backup/incremental.sh</span><br><span class="line"></span><br><span class="line">#how much the disk can be full before deleting old archives</span><br><span class="line">MAX_PERCENT_USED=85</span><br></pre></td></tr></table></figure></p><p>Then we need to actually backup some stuff to <code>$BACKUPDIR</code>. The <code>rsync_black.sh</code> is the script that backs up my windows desktop pc (his name is <code>black</code>). The script connects with ssh to the remote pc, and backs up the</p><ul><li><code>.gnupg</code>,</li><li><code>.ssh</code>,</li><li><code>AppData/Roaming/copyq</code>,</li><li><code>AppData/Roaming/Mozilla/Firefox/Profiles</code></li></ul><p>folders to <code>$BACKUPDIR/black/Users/s2/</code>:<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">. `dirname $0`/backup_config.sh</span><br><span class="line"></span><br><span class="line">host=black</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">(</span><br><span class="line">flock -xn 200</span><br><span class="line">if [ $? != 0 ]; then exit 0; fi;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ping -c1 $host&gt;/dev/null 2&gt;&amp;1</span><br><span class="line">if [ $? != 0 ]; then exit 0; fi</span><br><span class="line"></span><br><span class="line">mkdir -p $BACKUPDIR/black</span><br><span class="line"></span><br><span class="line">mkdir -p $BACKUPDIR/black/Users/s2/ &amp;&amp; /home/s2/bin/backup/rsync-wrapper.sh \</span><br><span class="line">    -R -aqz --numeric-ids --delete-after --ignore-missing-args --exclude &#x27;*.lock&#x27; \</span><br><span class="line">    -e &#x27;ssh&#x27; s2@$host:.gnupg \</span><br><span class="line">    :.ssh \</span><br><span class="line">    :AppData/Roaming/copyq \</span><br><span class="line">    :AppData/Roaming/Mozilla/Firefox/Profiles \</span><br><span class="line">    $BACKUPDIR/black/Users/s2/</span><br><span class="line"></span><br><span class="line">$INCREMENTAL</span><br><span class="line"></span><br><span class="line">) 200&gt;$RSYNC_LOCK_FILE</span><br></pre></td></tr></table></figure></p><p>The script uses <a href="https://git.samba.org/?p=rsync.git;a=blob_plain;f=support/rsync-no-vanished;hb=HEAD"><code>rsync-wrapper.sh</code></a>, because sometimes files on the running desktop vanish while being backed up, and we want to ignore this error. So we don&#39;t use <code>rsync</code> directly to backup, but wrap it with <code>rsync-wrapper.sh</code>:<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/env bash</span><br><span class="line"></span><br><span class="line">REAL_RSYNC=/usr/bin/rsync</span><br><span class="line">IGNOREEXIT=24</span><br><span class="line">IGNOREOUT=&#x27;^(file has vanished: |rsync warning: some files vanished before they could be transferred)&#x27;</span><br><span class="line"></span><br><span class="line"># If someone installs this as &quot;rsync&quot;, make sure we don&#x27;t affect a server run.</span><br><span class="line">for arg in &quot;$&#123;@&#125;&quot;; do</span><br><span class="line">    if [[ &quot;$arg&quot; == --server ]]; then</span><br><span class="line">exec $REAL_RSYNC &quot;$&#123;@&#125;&quot;</span><br><span class="line">exit $? # Not reached</span><br><span class="line">    fi</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line">set -o pipefail</span><br><span class="line"></span><br><span class="line"># This filters stderr without merging it with stdout:</span><br><span class="line">&#123; $REAL_RSYNC &quot;$&#123;@&#125;&quot; 2&gt;&amp;1 1&gt;&amp;3 3&gt;&amp;- | grep -E -v &quot;$IGNOREOUT&quot;; ret=$&#123;PIPESTATUS[0]&#125;; &#125; 3&gt;&amp;1 1&gt;&amp;2</span><br><span class="line"></span><br><span class="line">if [[ $ret == $IGNOREEXIT ]]; then</span><br><span class="line">    ret=0</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">exit $ret</span><br></pre></td></tr></table></figure></p><p>Like our <code>rsync_black.sh</code> file above, we can create more files like that, to backup other computers. For example <code>rsync_31337.it.sh</code> backs up folders on a remote server:<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">. `dirname $0`/backup_config.sh</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">(</span><br><span class="line">flock -xn 200</span><br><span class="line">if [ $? != 0 ]; then exit 0; fi;</span><br><span class="line"></span><br><span class="line">mkdir -p $BACKUPDIR/31337.it</span><br><span class="line"></span><br><span class="line">rsync -R -aqz --numeric-ids --delete-after -e &#x27;ssh -p 22022&#x27; \</span><br><span class="line">    --exclude /home/n3wz/n3wz/run/solr/solr-5.3.1/server/solr/fcku/data \</span><br><span class="line">    root@vps.31337.it:/home/vmail \</span><br><span class="line">    :/home/s2 \</span><br><span class="line">    :/root \</span><br><span class="line">    :/home/n3wz \</span><br><span class="line">    :/etc/letsencrypt \</span><br><span class="line">    :/etc/postfix \</span><br><span class="line">    :/etc/postgresql \</span><br><span class="line">    :/etc/postgresql-common \</span><br><span class="line">    :/etc/apache2 \</span><br><span class="line">    :/etc/news \</span><br><span class="line">    :/etc/prosody \</span><br><span class="line">    :/etc/dovecot \</span><br><span class="line">    :/etc/default \</span><br><span class="line">    :/etc/dkimkeys \</span><br><span class="line">    :/etc/opendkim.conf \</span><br><span class="line">    :/etc/opendmarc.conf \</span><br><span class="line">    :/var/spool/cron/crontabs \</span><br><span class="line">    :/var/www \</span><br><span class="line">    $BACKUPDIR/31337.it/</span><br><span class="line"></span><br><span class="line">$INCREMENTAL</span><br><span class="line"></span><br><span class="line">) 200&gt;$RSYNC_LOCK_FILE</span><br></pre></td></tr></table></figure></p><p>Now we have all our folders from all our remote computers on <code>$BACKUPDIR</code>. We need to version them. <code>$INCREMENTAL</code> is responsible for that. This is <code>incremental.sh</code>:<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">. `dirname $0`/backup_config.sh</span><br><span class="line"></span><br><span class="line">CURBACKUPDATE=`date &quot;+%F_%T&quot;`</span><br><span class="line">BACKUPSUBDIR=`date &quot;+%Y/%m/%d&quot;`</span><br><span class="line"></span><br><span class="line">mkdir -p $ARCHIVEDIR/$BACKUPSUBDIR                             &amp;&amp;</span><br><span class="line"></span><br><span class="line">nice -n 10 rsync -aq --inplace --numeric-ids \</span><br><span class="line">           --link-dest=$ARCHIVEDIR/backup_current \</span><br><span class="line">           $BACKUPDIR/ \</span><br><span class="line">           $ARCHIVEDIR/$BACKUPSUBDIR/backup_$CURBACKUPDATE     &amp;&amp;</span><br><span class="line">(cd $ARCHIVEDIR &amp;&amp; rm backup_current &amp;&amp; ln -sf $BACKUPSUBDIR/backup_$CURBACKUPDATE backup_current)</span><br></pre></td></tr></table></figure></p><p>in <code>$ARCHIVEDIR</code> we create a lot of folders named with date and time, that contain our backup at a given point in time, so we can recover everything in case of lost data.</p><p>When our backupdisk reaches <code>$MAX_PERCENT_USED</code>, we need to clean up, by deleting old archives. To do that, we use <code>remove_old.sh</code>:<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">. `dirname $0`/backup_config.sh</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">get_used_space() &#123;</span><br><span class="line">local inodes=`df -i $BACKUPDISK|grep &#x27;dev&#x27;|awk &#x27;&#123;print $5&#125;&#x27;|sed &#x27;s/%//&#x27;`</span><br><span class="line">local space=`df $BACKUPDISK|grep &#x27;dev&#x27;|awk &#x27;&#123;print $5&#125;&#x27;|sed &#x27;s/%//&#x27;`</span><br><span class="line"></span><br><span class="line">if [ $inodes -gt $space ]; then</span><br><span class="line">                used_space=$inodes</span><br><span class="line">else</span><br><span class="line">used_space=$space</span><br><span class="line">fi</span><br><span class="line">echo used space is $used_space</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">check_used_space() &#123;</span><br><span class="line">get_used_space</span><br><span class="line">if [ $used_space -lt $MAX_PERCENT_USED ]; then</span><br><span class="line">echo used space is less than $MAX_PERCENT_USED</span><br><span class="line"></span><br><span class="line">                echo empty directoies</span><br><span class="line">                sudo find $ARCHIVEDIR/????/?? -depth -maxdepth 1 -empty -type d -exec rm -rf &#123;&#125; \;</span><br><span class="line">                sudo find $ARCHIVEDIR/???? -depth -maxdepth 2 -empty -type d -exec rm -rf &#123;&#125; \;</span><br><span class="line"></span><br><span class="line">echo exiting</span><br><span class="line">exit 0</span><br><span class="line">fi</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">(</span><br><span class="line">flock -xn 200</span><br><span class="line">  if [ $? != 0 ]; then exit 0; fi;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  check_used_space</span><br><span class="line"></span><br><span class="line">  for stuff in `ls -tr1d $ARCHIVEDIR/????/??/??`; do</span><br><span class="line">echo deleting $stuff</span><br><span class="line">sudo rm -rf $stuff</span><br><span class="line">check_used_space</span><br><span class="line">  done</span><br><span class="line"></span><br><span class="line">) 200&gt;$RSYNC_LOCK_FILE</span><br></pre></td></tr></table></figure></p><p>With all our files in one folder, we have everyhing in place. I have them in my home dir, in <code>/home/s2/bin/backup</code>:<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">/home/s2/bin/backup</span><br><span class="line">|</span><br><span class="line">├─ backup_config.sh</span><br><span class="line">├─ incremental.sh</span><br><span class="line">├─ remove_old.sh</span><br><span class="line">├─ rsync_31337.it.sh</span><br><span class="line">├─ rsync_black.sh</span><br><span class="line">├─ rsync_home.sh</span><br><span class="line">├─ rsync_laptop.sh</span><br><span class="line">└─ rsync-wrapper.sh</span><br></pre></td></tr></table></figure></p><p>So, now if we run <code>rsync_31337.it.sh</code>, all our files from the computer 31337.it get copied over to our <code>$BACKUPDIR</code>, and <code>incremental.sh</code> will then create our backup folder in <code>archive</code>, representing our files at this specific point in time.</p><p><code>$ARCHIVEDIR</code> will look like this:<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">/home/backupdisk/archive/</span><br><span class="line">├── 2023</span><br><span class="line">│   ├── 04</span><br><span class="line">│   │   ├── 23</span><br><span class="line">│   │   │   ├── backup_2023-04-23_16:31:34</span><br><span class="line">│   │   │   └── backup_2023-04-23_18:30:29</span><br><span class="line">│   │   ├── 24</span><br><span class="line">│   │   │   └── backup_2023-04-24_10:40:45</span><br><span class="line"></span><br><span class="line">[...]</span><br><span class="line"></span><br><span class="line">├── 2024</span><br><span class="line">│   ├── 01</span><br><span class="line">│   │   ├── 01</span><br><span class="line">│   │   │   └── backup_2024-01-01_04:30:12</span><br><span class="line">│   │   └── 29</span><br><span class="line">│   │       └── backup_2024-01-29_04:32:43</span><br><span class="line">│   └── 02</span><br><span class="line">│       ├── 01</span><br><span class="line">│       │   └── backup_2024-02-01_04:32:45</span><br><span class="line">│       └── ...</span><br><span class="line">└── backup_current -&gt; 2024/02/27/backup_2024-02-27_04:30:19</span><br></pre></td></tr></table></figure></p><p>Now we just need to run them periodically with <code>cron</code>:<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#backup</span><br><span class="line">30 4   * * * sudo /home/s2/bin/backup/rsync_home.sh</span><br><span class="line">30 */2 * * * sudo /home/s2/bin/backup/rsync_black.sh</span><br><span class="line"></span><br><span class="line">45 */2 * * * sudo /home/s2/bin/backup/remove_old.sh &gt;/dev/null</span><br></pre></td></tr></table></figure></p><p>Done.</p><p>Optionally, we could compress and crypt our <code>$BACKUPDIR</code> or <code>$ARCHIVEDIR</code>, and upload everything to some cloud storage for additional safety.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;A cronjob on a server rsyncs all files from different locations to a single folder. Then, that folder gets versioned and backed up again,
      
    
    </summary>
    
    
      <category term="backup rsync" scheme="http://31337.it/tags/backup-rsync/"/>
    
  </entry>
  
  <entry>
    <title>WPC 2023</title>
    <link href="http://31337.it/wpc-2023/"/>
    <id>http://31337.it/wpc-2023/</id>
    <published>2023-11-27T23:00:00.000Z</published>
    <updated>2024-11-08T20:02:45.834Z</updated>
    
    <content type="html"><![CDATA[<h1 id="WPC-2023"><a href="#WPC-2023" class="headerlink" title="WPC 2023"></a>WPC 2023</h1><p>WPC è l&#39;evento annuale più importante nel panorama ICT a cui partecipano i personaggi più influenti e di rilievo di Microsoft e del settore IT.</p><h1 id="Day-1"><a href="#Day-1" class="headerlink" title="Day 1"></a>Day 1</h1><p><img src="wpc-2023/IMG20231128095638.jpg" alt=""></p><p>Plenaria: siamo concentrati su AI e tutto quello che ne consegue: AI per lo sviluppo, AI in Micosoft 365, integrazione AI in applicativi custom.</p><h2 id="AI-Generativa-per-accedere-ai-dati-aziendali-un-caso-reale"><a href="#AI-Generativa-per-accedere-ai-dati-aziendali-un-caso-reale" class="headerlink" title="AI Generativa per accedere ai dati aziendali: un caso reale"></a>AI Generativa per accedere ai dati aziendali: un caso reale</h2><p>Open AI e ChatGPT hanno mostrato al mondo le enormi potenzialità dell&#39;AI Generativa, ma come possiamo usarla nelle nostre applicazioni? Vediamo insieme un caso reale di orchestrazione dei Large Language Model per l&#39;accesso ai dati aziendali.<br><img src="wpc-2023/IMG20231128142440.jpg" alt=""><br><img src="wpc-2023/IMG20231128145134.jpg" alt=""><br><img src="wpc-2023/IMG20231128151642.jpg" alt=""></p><h2 id="Retrieval-Augmented-Generation-e-suoi-utilizzi-pratici-nello-sviluppo-di-applicazioni-Enterprise"><a href="#Retrieval-Augmented-Generation-e-suoi-utilizzi-pratici-nello-sviluppo-di-applicazioni-Enterprise" class="headerlink" title="Retrieval Augmented Generation e suoi utilizzi pratici nello sviluppo di applicazioni Enterprise"></a>Retrieval Augmented Generation e suoi utilizzi pratici nello sviluppo di applicazioni Enterprise</h2><p>In questa sessione discuteremo di Retrieval Augmented Generation nell&#39;ambito della delivery di progetti reali. Mostreremo come RAG possa essere uno degli strumenti più efficaci per superare i limiti delle LLM nel contesto dei casi d&#39;uso tipici che si possono incontrare in ambito Enterprise. Condivideremo alcune delle esperienze che abbiamo maturato nell&#39;ambito dei progetti sviluppati per i nostri clienti interni ed esterni.</p><p><img src="wpc-2023/IMG20231128164437.jpg" alt=""><br><img src="wpc-2023/IMG20231128170054.jpg" alt=""><br><img src="wpc-2023/IMG20231128170224.jpg" alt=""><br><img src="wpc-2023/IMG20231128170230.jpg" alt=""><br><img src="wpc-2023/IMG20231128170355.jpg" alt=""><br><img src="wpc-2023/IMG20231128170541.jpg" alt=""><br><img src="wpc-2023/IMG20231128170758.jpg" alt=""><br><img src="wpc-2023/IMG20231128171209.jpg" alt=""><br><img src="wpc-2023/IMG20231128171822.jpg" alt=""><br><img src="wpc-2023/IMG20231128172451.jpg" alt=""><br><img src="wpc-2023/IMG20231128173051.jpg" alt=""><br><img src="wpc-2023/IMG20231128173310.jpg" alt=""></p><h1 id="Day-2"><a href="#Day-2" class="headerlink" title="Day 2"></a>Day 2</h1><h2 id="Non-perderti-nella-giungla-dei-Guests-in-Microsoft-365"><a href="#Non-perderti-nella-giungla-dei-Guests-in-Microsoft-365" class="headerlink" title="Non perderti nella giungla dei Guests in Microsoft 365"></a>Non perderti nella giungla dei Guests in Microsoft 365</h2><p>Ripetete con noi Governance, Governance e Governance.<br>Microsoft 365 offre un modo estremamente potente per collaborare non solo con persone della stessa organizzazione ma anche con partner, fornitori e così via, che può essere definito anche con una parola &quot;Guest&quot;.<br>In questa sessione vedremo che tipo di possibilità ci sono per definire buone regole, tenere traccia e monitorare ogni guest in Azure Active Directory aka Microsoft Entra ID.<br>Analizzeremo quali soluzioni possono essere adottate già pronte e come costruire un processo di gestione del ciclo di vita dell&#39;ospite.</p><p><img src="wpc-2023/IMG20231129100318.jpg" alt=""><br><img src="wpc-2023/IMG20231129103018.jpg" alt=""></p><h2 id="Microsoft-365-CoPilot-l-39-AI-generativa-entra-in-ufficio-sfide-ed-opportunita"><a href="#Microsoft-365-CoPilot-l-39-AI-generativa-entra-in-ufficio-sfide-ed-opportunita" class="headerlink" title="Microsoft 365 CoPilot: l&#39;AI generativa entra in ufficio, sfide ed opportunità"></a>Microsoft 365 CoPilot: l&#39;AI generativa entra in ufficio, sfide ed opportunità</h2><p>La presentazione illustrerà, tramite l&#39;analisi di alcuni casi d&#39;uso, la tecnologia e le caratteristiche di Microsoft 365 CoPilot in ambito Collaboration e in che modo un partner come SoftwareOne sia in grado di supportare i clienti nella corretta implementazione della soluzione, a seconda delle necessità. Parleremo anche di sicurezza dei dati in ambito Microsoft 365.</p><p><img src="wpc-2023/IMG20231129111908.jpg" alt=""><br><img src="wpc-2023/IMG20231129113246.jpg" alt=""><br><img src="wpc-2023/IMG20231129113510.jpg" alt=""><br><img src="wpc-2023/IMG20231129113727.jpg" alt=""><br><img src="wpc-2023/IMG20231129114605.jpg" alt=""><br><img src="wpc-2023/IMG20231129120028.jpg" alt=""></p><h2 id="Teams-Calling-e-Meeting-stato-dell-39-arte-ed-esperienze"><a href="#Teams-Calling-e-Meeting-stato-dell-39-arte-ed-esperienze" class="headerlink" title="Teams Calling e Meeting: stato dell&#39;arte ed esperienze"></a>Teams Calling e Meeting: stato dell&#39;arte ed esperienze</h2><p>Il mondo della fonia Teams e degli Hybrid Meeting è ormai consolidato e parte della vita di tutti i giorni. In questa sessione vedremo cosa è possibile fare oggi con Teams e come configurare l&#39;ambiente di comunicazione per sfruttare al meglio ciò che la piattaforma offre ottimizzando l&#39;esperienza utente e massimizzando la produttività delle persone e dei gruppi di lavoro.<br>Dalla gestione di telefoni e dispositivi di sala, all&#39;integrazione di centralini e sistemi esistenti, dall&#39;utilizzo di fonia tradizionale o cloud, senza necessità di infrastrutture on-premises, alla prenotazione e gestione di sale e risorse per hybrid meeting.</p><p>Tramite live demo vedremo in azione un ambiente configurato a regola d&#39;arte frutto dell&#39;esperienza ultra-decennale degli speaker con i sistemi Microsoft di Unified Communications.</p><p><img src="wpc-2023/IMG20231129135341.jpg" alt=""><br><img src="wpc-2023/IMG20231129140142.jpg" alt=""></p><h2 id="Microsoft-365-Copilot-Deep-Dive"><a href="#Microsoft-365-Copilot-Deep-Dive" class="headerlink" title="Microsoft 365 Copilot Deep Dive"></a>Microsoft 365 Copilot Deep Dive</h2><p>Microsoft 365 Copilot è uno dei servizi che ha saputo trasformare al meglio le potenzialità delle AI generative in uno strumento di produttività, capace di far risparmiare tempo alle persone e dare loro maggiore spazio per creare valore in azienda.</p><p>Ma come funziona? Cos&#39;è il Semantic Index? Come vengono gestite la privacy e la sicurezza dei miei dati?</p><p>Nel corso di questa sessione, faremo una panoramica dell&#39;architettura tecnica di Microsoft 365 Copilot e daremo una risposta a queste e tante altre domande!</p><p><img src="wpc-2023/IMG20231129150232.jpg" alt=""><br><img src="wpc-2023/IMG20231129151811.jpg" alt=""><br><img src="wpc-2023/IMG20231129152003.jpg" alt=""></p><h2 id="AI-in-salsa-Microsoft-estendere-Microsoft-365-Copilot"><a href="#AI-in-salsa-Microsoft-estendere-Microsoft-365-Copilot" class="headerlink" title="AI in salsa Microsoft: estendere Microsoft 365 Copilot"></a>AI in salsa Microsoft: estendere Microsoft 365 Copilot</h2><p>Microsoft 365 Copilot is one of the most exciting technologies in the AI space, which aims to improve users&#39; productivity across the entire Office suite. But there&#39;s more! In this session, we&#39;ll explore how Copilot isn&#39;t just a business feature, but also the starting point for developers to integrate their own data and extend their applications with new AI capabilities.</p><p>Microsoft 365 Copilot è uno dei prodotti più interessanti nel panorama dei servizi supportati dall&#39;Intelligenza Artificiale, in quanto permette di combinare la potenza di LLM come ChatGPT con i dati aziendali grazie a Microsoft Graph. Nel corso di questa sessione, vedremo come M365 Copilot non è solo un servizio per gli utenti aziendali, ma anche una piattaforma che può essere estesa dagli sviluppatori tramite plugin e Graph Connector.</p><p><img src="wpc-2023/IMG20231129162412.jpg" alt=""><br><img src="wpc-2023/IMG20231129163900.jpg" alt=""><br><img src="wpc-2023/IMG20231129163940.jpg" alt=""><br><img src="wpc-2023/IMG20231129164143.jpg" alt=""></p><h2 id="Costruisci-il-tuo-Copilot-con-il-Semantic-Kernel"><a href="#Costruisci-il-tuo-Copilot-con-il-Semantic-Kernel" class="headerlink" title="Costruisci il tuo Copilot con il Semantic Kernel"></a>Costruisci il tuo Copilot con il Semantic Kernel</h2><p>Scopri come creare il tuo Copilot sfruttando la potenza di Semantic Kernel. In questa sessione vedremo cos&#39;è Semantic Kernel, quali sono i suoi componenti principali, che problemi risolve, e come questa tecnologia può aiutarti ad integrare rapidamente servizi di AI nelle tue applicazioni</p><p><img src="wpc-2023/IMG20231129172928.jpg" alt=""><br><img src="wpc-2023/IMG20231129173333.jpg" alt=""><br><img src="wpc-2023/IMG20231130090353.jpg" alt=""><br><img src="wpc-2023/IMG20231130094317.jpg" alt=""></p><h1 id="day-3"><a href="#day-3" class="headerlink" title="day 3"></a>day 3</h1><h2 id="Easy-Auth-autenticazione-multi-provider-nei-tuoi-App-Service-in-4-mosse"><a href="#Easy-Auth-autenticazione-multi-provider-nei-tuoi-App-Service-in-4-mosse" class="headerlink" title="Easy-Auth: autenticazione multi-provider nei tuoi App Service in 4 mosse!!!"></a>Easy-Auth: autenticazione multi-provider nei tuoi App Service in 4 mosse!!!</h2><p>Un fantastico viaggio alla scoperta di Easy-Auth, la funzionalità di autenticazione integrata del Servizio app di Azure.<br>Utilizzando Easy-Auth, gli sviluppatori possono semplificare l&#39;autenticazione nelle proprie applicazioni Web, supportando più provider di identità come Azure Active Directory, account Microsoft, Facebook, Google e Twitter.<br>In questa sessione, illustreremo le funzionalità di Easy Auth, esamineremo i passaggi di configurazione e discuteremo le best practice per un&#39;implementazione sicura.<br>I partecipanti acquisiranno una conoscenza approfondita su come sfruttare Easy-Auth per creare applicazioni Web sicure con un&#39;esperienza utente senza soluzione di continuità.</p><h2 id="Azure-DevOps-per-gestire-l’assistenza-clienti"><a href="#Azure-DevOps-per-gestire-l’assistenza-clienti" class="headerlink" title="Azure DevOps per gestire l’assistenza clienti"></a>Azure DevOps per gestire l’assistenza clienti</h2><p>Azure DevOps è una piattaforma molto flessibile che può essere utilizzata in tutte le fasi del ciclo di vita di un software. In questa sessione vi mostreremo come sia possibile utilizzare la piattaforma per la gestione dell’assistenza clienti, integrandola direttamente nell’applicazione finale sfruttando le API messe a disposizione dal servizio e automatizzando tutte le fasi di segnalazione e gestione dei ticket, inclusa quella dell’interazione umana nel processo.</p><p><img src="wpc-2023/IMG20231130095835.jpg" alt=""></p><h2 id="GPT-e-AI-nella-giornata-tipica-di-uno-sviluppatore"><a href="#GPT-e-AI-nella-giornata-tipica-di-uno-sviluppatore" class="headerlink" title="GPT e AI nella giornata tipica di uno sviluppatore"></a>GPT e AI nella giornata tipica di uno sviluppatore</h2><p>In questa sessione andrò a spiegare come uno sviluppatore puo utilizzare le funzionalità della AI durante la sua giornata lavorativa. Lo scopo è rispondere ad una recente questione: può uno sviluppatore essere rimpiazzato da una AI?<br>Esempi pratici e consigli dalla trincea di chi oramai usa la AI praticamente tutti i giorni.</p><p><img src="wpc-2023/IMG20231130113000.jpg" alt=""><br><img src="wpc-2023/IMG20231130113206.jpg" alt=""><br><img src="wpc-2023/IMG20231130121014.jpg" alt=""></p><p>Basta. Sono stanco. Torno a casa.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;WPC-2023&quot;&gt;&lt;a href=&quot;#WPC-2023&quot; class=&quot;headerlink&quot; title=&quot;WPC 2023&quot;&gt;&lt;/a&gt;WPC 2023&lt;/h1&gt;&lt;p&gt;WPC è l&amp;#39;evento annuale più importante nel 
      
    
    </summary>
    
    
      <category term="AI" scheme="http://31337.it/tags/AI/"/>
    
  </entry>
  
  <entry>
    <title>Setting up Dovecot and Roundcube with Azure Active Directory B2C</title>
    <link href="http://31337.it/dovecot-b2c-oauth/"/>
    <id>http://31337.it/dovecot-b2c-oauth/</id>
    <published>2022-09-13T22:00:00.000Z</published>
    <updated>2024-11-08T20:02:45.110Z</updated>
    
    <content type="html"><![CDATA[<p>This post explains how to configure Roundcube that connects to Dovecot to fetch mails letting the user authenticate against an Azure Active Directory B2C.</p><p><img src="dovecot-b2c-oauth/dovecot-b2c-oauth.png" alt="Nice diagram"></p><h2 id="Azure-AD"><a href="#Azure-AD" class="headerlink" title="Azure AD"></a>Azure AD</h2><p>In Azure AD B2C we need to:</p><ol><li>Register an App for Roundcube</li><li>Register an App for Dovecot</li><li>Create a User Flow to log Users into Roundcube</li><li>Create a resource owner password credential (ROPC) flow to log Users into Dovecot whit PLAIN</li></ol><h3 id="App-registrations"><a href="#App-registrations" class="headerlink" title="App registrations"></a>App registrations</h3><p>First of all let&#39;s register a new app in AAD App registrations for Roundcube:<br><img src="dovecot-b2c-oauth/app-registration.png" alt="app registration"></p><p>Change the domain of the redirect uri to the domain of your Roundcube installation.</p><p>Now let&#39;s create an OAuth client secret for Roundcube. Go to <code>Certificates and secrets</code> for the App we just registered, and create a new secret.<br><img src="dovecot-b2c-oauth/certs-and-secrets.png" alt="Certs and secrets"></p><p>Save this secret for later, we will need it when configuring Roundcube.</p><p>Do the same for Dovecot, but for the Dovecot app, under Advanced settings -&gt; Enable the following mobile and desktop flows, select Yes to treat the application as a public client.</p><p><img src="dovecot-b2c-oauth/allow-public-client-flows.png" alt="Allow public client flows"></p><p>Also, for the Dovecot app, we need to set <code>&quot;oauth2AllowImplicitFlow&quot;: true</code> in the App Manifest.</p><p>This setting is required for the ROPC flow we will create in the next chapter.</p><h3 id="Sign-in-up-and-ROPC-flow"><a href="#Sign-in-up-and-ROPC-flow" class="headerlink" title="Sign in/up and ROPC flow"></a>Sign in/up and ROPC flow</h3><p>Now let&#39;s configure the Sign in/up flow, so users can log in to Roundcube. But first we need to add a custom attribute for our users, that will hold the Dovecot username for login.<br><img src="dovecot-b2c-oauth/login-username.png" alt="Custom attr"></p><p>How to populate this user attribute is left as exercise for the reader (use API connectors).</p><p>And now create a new flow. Call it something you like (mine is called <code>B2C_1_SignUpIn</code>), and add the attribute as claim for Roundcube:<br><img src="dovecot-b2c-oauth/flow.png" alt="Flow"></p><p>This flow is used by Roundcube to log users in.</p><p>We need one more, to allow Dovecot to log users in with username and password for plain auth, but authenticating them against our B2C AD. To do that, we need to create a <a href="https://learn.microsoft.com/en-us/azure/active-directory-b2c/add-ropc-policy?tabs=app-reg-ga&amp;pivots=b2c-user-flow">resource owner password credential flow</a>.</p><p>Once created, add the custom user attribute to the application claims like for the flow created previously.</p><p>We are done here. Next up is Roundcube.</p><h2 id="Roundcube"><a href="#Roundcube" class="headerlink" title="Roundcube"></a>Roundcube</h2><p>Download and install it (at the time of writing the actual version is 1.6.0, and I tested everything with this version), and following <a href="https://github.com/roundcube/roundcubemail/wiki/Configuration:-OAuth2">this</a> wiki page, we can configure OAuth.</p><p>We just have to add some parameters in <code>roundcube/config/config.inc.php</code>:<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">// ----------------------------------</span><br><span class="line">// OAuth</span><br><span class="line">// ----------------------------------</span><br><span class="line"></span><br><span class="line">// Enable OAuth2 by defining a provider. Use &#x27;generic&#x27; here</span><br><span class="line">$config[&#x27;oauth_provider&#x27;] = &#x27;generic&#x27;;</span><br><span class="line"></span><br><span class="line">// Provider name to be displayed on the login button</span><br><span class="line">$config[&#x27;oauth_provider_name&#x27;] = &#x27;Simons mail server&#x27;;</span><br><span class="line"></span><br><span class="line">// Mandatory: OAuth client ID for your Roundcube installation</span><br><span class="line">$config[&#x27;oauth_client_id&#x27;] = &#x27;&lt;Roundcube app registration client id&gt;&#x27;;</span><br><span class="line"></span><br><span class="line">// Mandatory: OAuth client secret</span><br><span class="line">$config[&#x27;oauth_client_secret&#x27;] = &#x27;&lt;Roundcube client secret&gt;&#x27;;</span><br><span class="line"></span><br><span class="line">// Mandatory: URI for OAuth user authentication (redirect)</span><br><span class="line">$config[&#x27;oauth_auth_uri&#x27;] = &#x27;https://&lt;yourB2Cdomain&gt;.b2clogin.com/&lt;yourB2Cdomain&gt;.onmicrosoft.com/oauth2/v2.0/authorize?p=B2C_1_SignUpIn&#x27;;</span><br><span class="line"></span><br><span class="line">// Mandatory: Endpoint for OAuth authentication requests (server-to-server)</span><br><span class="line">$config[&#x27;oauth_token_uri&#x27;] = &#x27;https://&lt;yourB2Cdomain&gt;.b2clogin.com/&lt;yourB2Cdomain&gt;.onmicrosoft.com/B2C_1_SignUpIn/oauth2/v2.0/token&#x27;;</span><br><span class="line"></span><br><span class="line">// Optional: Endpoint to query user identity if not provided in auth response</span><br><span class="line">$config[&#x27;oauth_identity_uri&#x27;] = null;</span><br><span class="line"></span><br><span class="line">// Optional: disable SSL certificate check on HTTP requests to OAuth server</span><br><span class="line">// See http://docs.guzzlephp.org/en/stable/request-options.html#verify for possible values</span><br><span class="line">$config[&#x27;oauth_verify_peer&#x27;] = true;</span><br><span class="line"></span><br><span class="line">// Mandatory: OAuth scopes to request (space-separated string)</span><br><span class="line">$config[&#x27;oauth_scope&#x27;] = &#x27;&lt;Roundcube app registration client id&gt; openid&#x27;;</span><br><span class="line"></span><br><span class="line">// Optional: additional query parameters to send with login request (hash array)</span><br><span class="line">$config[&#x27;oauth_auth_parameters&#x27;] = [&#x27;nonce&#x27; =&gt; mt_rand()];</span><br><span class="line"></span><br><span class="line">// Optional: array of field names used to resolve the username within the identity information</span><br><span class="line">$config[&#x27;oauth_identity_fields&#x27;] = [&#x27;extension_PreferredLoginUsername&#x27;];</span><br><span class="line"></span><br><span class="line">// Boolean: automatically redirect to Auth login when opening Roundcube without a valid session</span><br><span class="line">$config[&#x27;oauth_login_redirect&#x27;] = true;</span><br></pre></td></tr></table></figure></p><p>That&#39;s it for Roundcube.</p><h2 id="Dovecot"><a href="#Dovecot" class="headerlink" title="Dovecot"></a>Dovecot</h2><p>Dovecot docs are <a href="https://doc.dovecot.org/configuration_manual/authentication/oauth2/">here</a>. We need to configure <code>conf.d/10-auth.conf</code> like this:<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">auth_mechanisms = plain oauthbearer xoauth2</span><br><span class="line"></span><br><span class="line"># this is for oauth auth</span><br><span class="line">passdb &#123;</span><br><span class="line">  driver = oauth2</span><br><span class="line">  mechanisms = xoauth2 oauthbearer</span><br><span class="line">  args = /etc/dovecot/dovecot-oauth2.conf.ext</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># this is for plain auth</span><br><span class="line">passdb &#123;</span><br><span class="line">  driver = oauth2</span><br><span class="line">  mechanisms = plain login</span><br><span class="line">  args = /etc/dovecot/dovecot-oauth2.plain.conf.ext</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></p><p><code>/etc/dovecot/dovecot-oauth2.conf.ext</code> looks like this:<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">tokeninfo_url = https://&lt;yourB2Cdomain&gt;.b2clogin.com/&lt;yourB2Cdomain&gt;.onmicrosoft.com/b2c_1_signupin/oauth2/v2.0/token?token=</span><br><span class="line">introspection_mode = local</span><br><span class="line">openid_configuration_url = https://&lt;yourB2Cdomain&gt;.b2clogin.com/&lt;yourB2Cdomain&gt;.onmicrosoft.com/B2C_1_SignUpIn/v2.0/.well-known/openid-configuration</span><br><span class="line">local_validation_key_dict = fs:posix:prefix=/etc/dovecot/keys/</span><br><span class="line">username_attribute = extension_PreferredLoginUsername</span><br></pre></td></tr></table></figure></p><p>and <code>/etc/dovecot/dovecot-oauth2.plain.conf.ext</code> looks like this:<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">grant_url = https://&lt;yourB2Cdomain&gt;.b2clogin.com/&lt;yourB2Cdomain&gt;.onmicrosoft.com/b2c_1_ropc_auth/oauth2/v2.0/token?scope=&lt;Dovecot app registration client id&gt;</span><br><span class="line">client_id = &lt;Dovecot app registration client id&gt;</span><br><span class="line">client_secret = &lt;Dovecot client secret&gt;</span><br><span class="line">username_attribute = extension_PreferredLoginUsername</span><br><span class="line">use_grant_password = yes</span><br><span class="line">introspection_mode = local</span><br><span class="line">local_validation_key_dict = fs:posix:prefix=/etc/dovecot/keys/</span><br></pre></td></tr></table></figure></p><p>Now we need to populate <code>/etc/dovecot/keys/</code> with the keys from our OAuth provider (AAD). Go to <code>https://&lt;yourB2Cdomain&gt;.b2clogin.com/&lt;yourB2Cdomain&gt;.onmicrosoft.com/b2c_1_signupin/discovery/v2.0/keys</code>, and copy the <code>keys</code> key. It&#39;s something like this:<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;kid&quot;:&quot;X5eXk4xyo...aNk&quot;,&quot;nbf&quot;:1493763266,&quot;use&quot;:&quot;sig&quot;,&quot;kty&quot;:&quot;RSA&quot;,&quot;e&quot;:&quot;AQAB&quot;,&quot;n&quot;:&quot;tVKUtcx_...Xw&quot;&#125;</span><br></pre></td></tr></table></figure><br>Create a file <code>/etc/dovecot/keys/&lt;App registration client id&gt;/RS256/&lt;kid&gt;</code> and put the key you copied above in that file.</p><h2 id="The-end"><a href="#The-end" class="headerlink" title="The end"></a>The end</h2><p>Restart Apache/Nginx, restard Dovecot, and try to log in. Everything should work.</p><p>Nice.</p><p>Bye.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;This post explains how to configure Roundcube that connects to Dovecot to fetch mails letting the user authenticate against an Azure Acti
      
    
    </summary>
    
    
      <category term="mail" scheme="http://31337.it/tags/mail/"/>
    
  </entry>
  
  <entry>
    <title>Setting up Dovecot with Fetchmail and SpamAssassin</title>
    <link href="http://31337.it/dovecot/"/>
    <id>http://31337.it/dovecot/</id>
    <published>2022-06-22T22:00:00.000Z</published>
    <updated>2024-11-08T20:02:45.110Z</updated>
    
    <content type="html"><![CDATA[<p>Dovecot is a really cool imap server. If you, like me, have a lot of mail accounts around the internet, a bit of gmail there, some hotmail over here, and want to collect everything on your nice local home server, this is the howto to follow.</p><h2 id="Fetchmail"><a href="#Fetchmail" class="headerlink" title="Fetchmail"></a>Fetchmail</h2><p>First of all we need to configure Fetchmail to fetch our mail. Fetchmail can&#39;t handle multiple IMAP accounts with IDLE with a single Fetchmail running, so we need to run multiple Fetchmail instances, one for each IMAP account we want to monitor.<br>To do this we use <a href="https://www.leonerd.org.uk/hacks/hints/fetchmultimail.html">this</a> script:<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line"># searches for subdirectories of $HOME/.fetchmail, and considers each as a</span><br><span class="line"># directory to run fetcmail from. The config should be stored as &quot;fetchmailrc&quot;</span><br><span class="line"># within this directory; without the leading &quot;.&quot;. Networks can be started and</span><br><span class="line"># stopped independently, or all together. See the --help option for detail on</span><br><span class="line"># invoking the script.</span><br><span class="line"></span><br><span class="line">FETCHMAILROOT=~/.fetchmail</span><br><span class="line"></span><br><span class="line">cd &quot;$FETCHMAILROOT&quot;</span><br><span class="line"></span><br><span class="line">ACTION=&quot;start&quot;</span><br><span class="line"></span><br><span class="line">while [ &quot;$1&quot; ]; do</span><br><span class="line">  ARG=&quot;$1&quot;</span><br><span class="line">  case &quot;$ARG&quot; in</span><br><span class="line">    -k|--kill) ACTION=&quot;kill&quot; ;;</span><br><span class="line">    -l|--list) ACTION=&quot;list&quot; ;;</span><br><span class="line">    -h|--help) ACTION=&quot;help&quot; ;;</span><br><span class="line">    --) shift; break ;;</span><br><span class="line">    -*) echo &quot;Unknown argument $ARG&quot;; exit 1 ;;</span><br><span class="line">    *) break ;;</span><br><span class="line">  esac</span><br><span class="line">  shift</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line">WHICH=&quot;$1&quot;</span><br><span class="line"></span><br><span class="line">function find_fetchmail_homes() &#123;</span><br><span class="line">  # Find directories immediately off FETCHMAILROOT</span><br><span class="line">  for ENT in *; do</span><br><span class="line">    if [ -d &quot;$ENT&quot; ]; then</span><br><span class="line">      echo &quot;$ENT&quot;</span><br><span class="line">    fi</span><br><span class="line">  done</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">case &quot;$ACTION&quot; in</span><br><span class="line">  help)</span><br><span class="line">    echo &quot;$0: [options..] [network]&quot;</span><br><span class="line">    echo &quot;Options are:&quot;</span><br><span class="line">    echo &quot; -h, --help:    This text&quot;</span><br><span class="line">    echo &quot; -k, --kill:    Stop network&quot;</span><br><span class="line">    echo &quot; -l, --list:    List networks, running or not&quot;</span><br><span class="line">    echo &quot;If a network is named, the action applies only to that network&quot;</span><br><span class="line">    exit 0</span><br><span class="line">    ;;</span><br><span class="line">  start)</span><br><span class="line">    for ENT in `find_fetchmail_homes`; do</span><br><span class="line">      if [ &quot;$WHICH&quot; -a &quot;$ENT&quot; != &quot;$WHICH&quot; ]; then continue; fi</span><br><span class="line">      export FETCHMAILHOME=`pwd`/$ENT</span><br><span class="line"></span><br><span class="line">      fetchmail $EXTRAOPTS #$ENT</span><br><span class="line">    done</span><br><span class="line">    ;;</span><br><span class="line">  list)</span><br><span class="line">    for ENT in `find_fetchmail_homes`; do</span><br><span class="line">      if [ &quot;$WHICH&quot; -a &quot;$ENT&quot; != &quot;$WHICH&quot; ]; then continue; fi</span><br><span class="line">      export FETCHMAILHOME=`pwd`/$ENT</span><br><span class="line">      FETCHMAILPID=$FETCHMAILHOME/fetchmail.pid</span><br><span class="line"></span><br><span class="line">      echo &quot;Config $ENT in $FETCHMAILHOME&quot;</span><br><span class="line">      if [ -r $FETCHMAILPID ]; then</span><br><span class="line">        echo &quot;  running as PID `cat $FETCHMAILPID`&quot;</span><br><span class="line">      else</span><br><span class="line">        echo &quot;  not running&quot;</span><br><span class="line">      fi</span><br><span class="line">    done</span><br><span class="line">    ;;</span><br><span class="line">  kill)</span><br><span class="line">    for ENT in `find_fetchmail_homes`; do</span><br><span class="line">      if [ &quot;$WHICH&quot; -a &quot;$ENT&quot; != &quot;$WHICH&quot; ]; then continue; fi</span><br><span class="line">      export FETCHMAILHOME=`pwd`/$ENT</span><br><span class="line">      FETCHMAILPID=$FETCHMAILHOME/fetchmail.pid</span><br><span class="line"></span><br><span class="line">      echo &quot;Config $ENT in $FETCHMAILHOME&quot;</span><br><span class="line">      if [ -r $FETCHMAILPID ]; then</span><br><span class="line">        fetchmail -q #$ENT</span><br><span class="line">      fi</span><br><span class="line">    done</span><br><span class="line">    ;;</span><br><span class="line">  *)</span><br><span class="line">    echo &quot;Ahh; unknown action $ACTION&quot;</span><br><span class="line">    exit 1</span><br><span class="line">    ;;</span><br><span class="line">esac</span><br></pre></td></tr></table></figure><br>We call it <code>fetchmultimail.sh</code> and save it somewhere, maybe in our <code>~/bin/fetchmultimail.sh</code>.</p><p>The script is configured with <code>fetchmailrc</code> files, one for every account:<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ tree .fetchmail</span><br><span class="line">.fetchmail</span><br><span class="line">├── email1@gmail.com.INBOX@gmail.com</span><br><span class="line">│   └── fetchmailrc</span><br><span class="line">├── email2@outlook.com@imap-mail.outlook.com</span><br><span class="line">│   └── fetchmailrc</span><br><span class="line">└── email3@outlook.com@imap-mail.outlook.com</span><br><span class="line">    └── fetchmailrc</span><br><span class="line"></span><br><span class="line">3 directories, 3 files</span><br></pre></td></tr></table></figure></p><p>The <code>fetchmailrc</code> configuration file in those directories is a standard fetchmailrc file, and looks something like this:<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">set postmaster &quot;postmaster&quot;</span><br><span class="line">set bouncemail</span><br><span class="line">set no spambounce</span><br><span class="line">set properties &quot;&quot;</span><br><span class="line">set daemon 300</span><br><span class="line">set invisible</span><br><span class="line">set syslog</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">poll imap-mail.outlook.com protocol IMAP port 993</span><br><span class="line">      user &#x27;email2@outlook.com&#x27; there with ssl with password &#x27;verysecureandsecretpassword&#x27; folder &#x27;INBOX&#x27; idle ssl</span><br><span class="line">      mda &quot;&#123; echo X-Mailbox: email2@outlook.com; cat; &#125; | spamc -s 5000000 | /usr/lib/dovecot/deliver -d s2&quot;</span><br></pre></td></tr></table></figure></p><p>So <code>fetchmail</code> fetches our mail from the IMAP server, and then delivers it to the <code>mda</code>. In this case, we</p><ul><li>add a header to the mail, so we can sort it to the correct folder later, with <code>&#123; echo X-Mailbox: email2@outlook.com; cat; &#125;</code></li><li>check for spam with SpamAssassin with <code>spamc -s 5000000</code></li><li>and then send it to Dovecot with <code>/usr/lib/dovecot/deliver -d s2</code>, where <code>s2</code> is the user we are delivering the mail to.</li></ul><p>To run this script on startup the easy way, we can use <code>crontab</code>:<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ crontab -l</span><br><span class="line">@reboot /home/s2/bin/fetchmultimail.sh &gt;/dev/null</span><br><span class="line">$</span><br></pre></td></tr></table></figure><br>This runs <code>fetchmultimal.sh</code> after every server startup.</p><h2 id="Dovecot"><a href="#Dovecot" class="headerlink" title="Dovecot"></a>Dovecot</h2><p>On the Dovecot side we now receive the mail, but we want to sort it to the correct folder using some custom rules. To do this, we can use <a href="https://doc.dovecot.org/configuration_manual/sieve/">Sieve</a>.</p><p>So first of all, we install and configure Sieve for Dovecot. To do this follow the <a href="https://doc.dovecot.org/configuration_manual/sieve/">official guide</a>, or one specific for your Linux distribution.</p><p>Once installed and configured Sieve, we can create a Sieve config file with the rules we want to have. A quick example:<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">require &quot;fileinto&quot;;</span><br><span class="line"></span><br><span class="line">#webcam alerts</span><br><span class="line">if address :is [&quot;From&quot;] &quot;webcamalerts@home.in.tern.al&quot; &#123;</span><br><span class="line">  fileinto &quot;webcamalerts&quot;;</span><br><span class="line">  stop;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#spam</span><br><span class="line">if header &quot;X-Spam-Flag&quot; &quot;YES&quot; &#123;</span><br><span class="line">  fileinto &quot;Junk&quot;;</span><br><span class="line">  stop;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#email1@gmail.com</span><br><span class="line">if header &quot;X-Mailbox&quot; &quot;email1@gmail.com&quot; &#123;</span><br><span class="line">  fileinto &quot;email1@gmail_com&quot;;</span><br><span class="line">  stop;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#email2@outlook.com</span><br><span class="line">if header &quot;X-Mailbox&quot; &quot;email2@outlook.com&quot; &#123;</span><br><span class="line">  fileinto &quot;email2@outlook.com&quot;;</span><br><span class="line">  stop;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#email3@outlook.com</span><br><span class="line">if header &quot;X-Mailbox&quot; &quot;email3@outlook.com&quot; &#123;</span><br><span class="line">  fileinto &quot;email3@outlook.com&quot;;</span><br><span class="line">  stop;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">fileinto &quot;INBOX&quot;;</span><br></pre></td></tr></table></figure></p><p>As you can see, we use the <code>X-Mailbox</code> header we set with Fetchmail to sort our mail. We could use the <code>To</code> header too, but if someone sends you an email where you are in the <code>Bcc</code> or the <code>Cc</code> filed, the <code>To</code> header field would be empty, so we use the custom <code>X-Mailbox</code> header we set by ourselves, so we are sure the mail arrived to that account, and gets put in the correct folder.</p><h2 id="The-end"><a href="#The-end" class="headerlink" title="The end"></a>The end</h2><p>So that was all. I skipped uninteresting stuff like how to install SpamAssassin and stuff like that, because it&#39;s Linux distribution dependent, and is very easy.</p><p>Hope the notes above helped someone!</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Dovecot is a really cool imap server. If you, like me, have a lot of mail accounts around the internet, a bit of gmail there, some hotmai
      
    
    </summary>
    
    
      <category term="mail" scheme="http://31337.it/tags/mail/"/>
    
  </entry>
  
  <entry>
    <title>Streaming only PostgreSQL replication</title>
    <link href="http://31337.it/postgres%20replication/"/>
    <id>http://31337.it/postgres replication/</id>
    <published>2017-10-18T22:00:00.000Z</published>
    <updated>2024-11-08T20:02:45.110Z</updated>
    
    <content type="html"><![CDATA[<p>My production PostgreSQL database is chugging along fine, but I have a bad feeling in my gut: if the box hosting that db goes down, I lose all my data. I make daily backups, but potentially losing 24 hours of data is much.</p><p>Time to set up a replicated read only server on an other box, that receives all the data from the master server asynchronously in real time.</p><h2 id="Preparing-the-master-server"><a href="#Preparing-the-master-server" class="headerlink" title="Preparing the master server"></a>Preparing the master server</h2><p>First create a user for the slave db:<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo -u postgres psql -c &quot;CREATE USER replicator REPLICATION LOGIN ENCRYPTED PASSWORD &#x27;x&#x27;;&quot;</span><br></pre></td></tr></table></figure></p><p>Next we need to grant replication access to the <code>replicator</code> user: in <code>pg_hba.conf</code> add<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># Allow replication connections from localhost, by a user with the</span><br><span class="line"># replication privilege.</span><br><span class="line">local   replication     replicator                                peer</span><br><span class="line">host    replication     replicator        127.0.0.1/32            md5</span><br><span class="line">host    replication     replicator        ::1/128                 md5</span><br></pre></td></tr></table></figure></p><p>in <code>postgresql.conf</code> set<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">wal_level = hot_standby</span><br><span class="line">max_wal_senders = 5</span><br><span class="line">wal_keep_segments = 10</span><br><span class="line">max_replication_slots = 10</span><br></pre></td></tr></table></figure></p><p><code>wal_keep_segments = 10</code> keeps 160MB of data before removing it on the master. If you think your database writes more than that in the time it takes to sync over the network to the slave, increase it.</p><p>Then we create a <a href="https://www.postgresql.org/docs/current/static/warm-standby.html#streaming-replication-slots">replication slot</a> for our slave to use:<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo -u postgres psql -x -c &quot;SELECT * FROM pg_create_physical_replication_slot(&#x27;replication_slot_1&#x27;);&quot;</span><br></pre></td></tr></table></figure></p><p>(If you want to remove the slot, the command is <code>select pg_drop_replication_slot(&#39;replication_slot_1&#39;);</code>)</p><p>The master is ready. We just need to restart it:<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo service postgresql restart</span><br></pre></td></tr></table></figure></p><p>We are ready to get connections from slaves.</p><h2 id="Setting-up-a-slave"><a href="#Setting-up-a-slave" class="headerlink" title="Setting up a slave"></a>Setting up a slave</h2><p>Since on the master we only accept connections from <code>localhost</code> (I don&#39;t like to expose the postgres port on the internet), we set up an ssh tunnel from the slave to the master:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">while true; do (echo JUST TUNNELING &amp;&amp; ssh -L5433:127.0.0.1:5432 -N user@master-pg-host); date; done;</span><br></pre></td></tr></table></figure><p>or make a systemd service or something. I like to have a script like this always running in my screen.</p><p>Then, make the slave pg a slave by editing <code>postgres.conf</code>:<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">wal_level = hot_standby</span><br><span class="line">max_wal_senders = 3</span><br><span class="line">wal_keep_segments = 10</span><br><span class="line">hot_standby = on</span><br></pre></td></tr></table></figure></p><p>Now we need to</p><ul><li>create a backup from the master</li><li>import it on the slave</li><li>start the slave.</li></ul><p>To do that, we can use this script:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">echo Stopping PostgreSQL</span><br><span class="line">sudo service postgresql stop</span><br><span class="line"></span><br><span class="line">echo Cleaning up old cluster directory</span><br><span class="line">sudo -u postgres rm -rf /var/lib/postgresql/9.5/main</span><br><span class="line"></span><br><span class="line">echo Starting base backup as replicator</span><br><span class="line">sudo -u postgres PGPASSWORD=x pg_basebackup -h 127.0.0.1 -p 5433 -D /var/lib/postgresql/9.5/main -U postgres -v -P</span><br><span class="line"></span><br><span class="line">echo Writing recovery.conf file</span><br><span class="line">sudo -u postgres bash -c &quot;cat &gt; /var/lib/postgresql/9.5/main/recovery.conf &lt;&lt;- _EOF_</span><br><span class="line">standby_mode = &#x27;on&#x27;</span><br><span class="line">primary_conninfo = &#x27;host=127.0.0.1 port=5433 user=replicator password=x&#x27;</span><br><span class="line">primary_slot_name = &#x27;replication_slot_1&#x27;</span><br><span class="line">_EOF_</span><br><span class="line">&quot;</span><br><span class="line"></span><br><span class="line">echo Startging PostgreSQL</span><br><span class="line">sudo service postgresql start</span><br></pre></td></tr></table></figure><p>When the slave restarts, it will sync with the lost transactions on the master and you have a running live backup!</p><h2 id="Checking-if-it-works"><a href="#Checking-if-it-works" class="headerlink" title="Checking if it works"></a>Checking if it works</h2><p>On the master, execute<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo -u postgres psql -x -c &quot;select * from pg_stat_replication;&quot;</span><br></pre></td></tr></table></figure></p><p>you should get an output like<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">-[ RECORD 1 ]----+------------------------------</span><br><span class="line">pid              | 27420</span><br><span class="line">usesysid         | 10</span><br><span class="line">usename          | postgres</span><br><span class="line">application_name | walreceiver</span><br><span class="line">client_addr      | 127.0.0.1</span><br><span class="line">client_hostname  | </span><br><span class="line">client_port      | 57522</span><br><span class="line">backend_start    | 2017-10-15 23:26:31.838917+02</span><br><span class="line">backend_xmin     | </span><br><span class="line">state            | streaming</span><br><span class="line">sent_location    | 0/939DFFC8</span><br><span class="line">write_location   | 0/939DFFC8</span><br><span class="line">flush_location   | 0/939DFFC8</span><br><span class="line">replay_location  | 0/939DFFC8</span><br><span class="line">sync_priority    | 0</span><br><span class="line">sync_state       | async</span><br></pre></td></tr></table></figure></p><p>You can also check if the replication slot is used on the master:<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">=&gt; SELECT slot_name, slot_type, active, xmin, catalog_xmin, restart_lsn FROM pg_replication_slots;</span><br><span class="line">  slot_name         | slot_type | active | xmin | catalog_xmin | restart_lsn</span><br><span class="line">--------------------+-----------+--------+------+--------------+-------------</span><br><span class="line"> replication_slot_1 | physical  | t      |      |              | 17/2D8EC6A0</span><br><span class="line">(1 row)</span><br><span class="line"></span><br></pre></td></tr></table></figure><br>If it is active it is working.</p><h2 id="disable-and-enable-replication-from-the-slave"><a href="#disable-and-enable-replication-from-the-slave" class="headerlink" title="disable and enable replication from the slave"></a>disable and enable replication from the slave</h2><p>Sometimes when running heavy queries on the slave, it may become necessary to disable replication for the duration of the query.</p><p>postgres &lt; 10<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">select pg_xlog_replay_pause();</span><br><span class="line">--run query</span><br><span class="line">select pg_xlog_replay_resume();</span><br></pre></td></tr></table></figure></p><p><a href="https://wiki.postgresql.org/wiki/New_in_postgres_10#Renaming_of_.22xlog.22_to_.22wal.22_Globally_.28and_location.2Flsn.29">postgres &gt;= 10</a><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">select pg_wal_replay_pause();</span><br><span class="line">--run query</span><br><span class="line">select pg_wal_replay_resume();</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;My production PostgreSQL database is chugging along fine, but I have a bad feeling in my gut: if the box hosting that db goes down, I los
      
    
    </summary>
    
    
      <category term="postgresql" scheme="http://31337.it/tags/postgresql/"/>
    
  </entry>
  
  <entry>
    <title>QCon London 2017 takeaway points</title>
    <link href="http://31337.it/qcon-2017/"/>
    <id>http://31337.it/qcon-2017/</id>
    <published>2017-03-05T23:00:00.000Z</published>
    <updated>2024-11-08T20:02:45.110Z</updated>
    
    <content type="html"><![CDATA[<p><img src="qcon-2017/DSC_0545.JPG" alt="qcon london 2017"><br><img src="qcon-2017/DSC_0565.JPG" alt="qcon london 2017"><br><img src="qcon-2017/DSC_0548.JPG" alt="qcon london 2017"><br><img src="qcon-2017/DSC_0549.JPG" alt="qcon london 2017"><br>here is the schedule: <a href="https://qconlondon.com/london-2017/schedule/tabular">https://qconlondon.com/london-2017/schedule/tabular</a></p><h1 id="so-what-was-it-all-about"><a href="#so-what-was-it-all-about" class="headerlink" title="so what was it all about?"></a>so what was it all about?</h1><p><a href="/qcon-2017/#Engineering-You">what is qcon?</a></p><ul><li>key topic: performance</li><li>keywords: serverless, automation, scaling, iot, containers, git, devops, ci, mobile, javascript</li><li>more keywords: drive change, innovation, diversity and equality in the workplace</li><li>waterfall is absolutely dead: agile/scrum is what it is since 2008. since 2012 it&#39;s about scaling agile and scrum.</li><li>soap is absolutely dead. nobody even mentioned it. rest/swagger is what it is.</li></ul><h1 id="day-1"><a href="#day-1" class="headerlink" title="day 1"></a>day 1</h1><h2 id="Security-War-Stories-The-Battle-For-The-Internet-of-Things"><a href="#Security-War-Stories-The-Battle-For-The-Internet-of-Things" class="headerlink" title="Security War Stories: The Battle For The Internet of Things"></a>Security War Stories: The Battle For The Internet of Things</h2><p>security is important, iot things are not secure, i can change your radio station and view your webcams, blablayaddayadda</p><h2 id="Microservices-At-The-Heart-of-BBC-iPlayer"><a href="#Microservices-At-The-Heart-of-BBC-iPlayer" class="headerlink" title="Microservices At The Heart of BBC iPlayer"></a>Microservices At The Heart of BBC iPlayer</h2><p><img src="qcon-2017/bbc/DSC_0551.JPG" alt=""><br>they had a big monolythic java app that did not meet demand.<br><img src="qcon-2017/bbc/DSC_0552.JPG" alt=""><br>so they had to do something: refactor the app to a lot of little apps.<br>had to pre-warm the caches before even putting the service online.<br><img src="qcon-2017/bbc/DSC_0553.JPG" alt=""><br>step by step re-architecturing the app.<br><img src="qcon-2017/bbc/DSC_0554.JPG" alt=""><br>reasons to choose node:</p><ul><li>it&#39;s fast</li><li>they already knew js</li></ul><p>response times before where 5seconds, with node 10ms - 100ms now is slow.<br>parts of the app are now</p><ul><li>independently deployable</li><li>independently scalable</li><li>independently failable</li></ul><p>(almost)</p><p><img src="qcon-2017/bbc/DSC_0555.JPG" alt=""><br>team workflow is now better: everyone can focus just on the piece that concerns them.<br>tdd development with pairing. there is a test for almost everything, and everyone has a backup. no one person owns a service anymore. the team owns all of the services.<br>problems faced: redis was a central point of everything, so there was no confidence in changing something that involved redis. solution: abstract redis with an api, and use multiple redis databases, one for episodes, one for shared stuff, ...<br>use yeoman to automate the creation of the small apps. this reduced the ammount of configuration essentially to 0.<br>seyren to check/monitor services.<br><img src="qcon-2017/bbc/DSC_0556.JPG" alt=""><br>everything over https and keep-alive internally.<br>deleting the shared database: we checked if something writes or reads from it. but there was some obscure software that was reading and writing to it every 40 minutes... deplyed a fix for it.<br>every piece of software now has it&#39;s own db, and is autonomous.<br>everything is consistent with node and js on the frontend. no context switching.<br><img src="qcon-2017/bbc/DSC_0557.JPG" alt=""><br>the team is just 4 people, with no pm.<br>consumer contracts help a lot with independence between client and api services.<br>moving from redis to postgres for some service because the requirements become more complex. redis is just a store, postgres can have complex sql reports.<br><img src="qcon-2017/bbc/DSC_0558.JPG" alt=""></p><h2 id="The-Hitchhiker-39-s-Guide-to-Serverless-Javascript"><a href="#The-Hitchhiker-39-s-Guide-to-Serverless-Javascript" class="headerlink" title="The Hitchhiker&#39;s Guide to Serverless Javascript"></a>The Hitchhiker&#39;s Guide to Serverless Javascript</h2><p><img src="qcon-2017/serverless/DSC_0559.JPG" alt=""><br>we are not talking about servers anymore, but about platforms.<br><img src="qcon-2017/serverless/DSC_0560.JPG" alt=""><br><img src="qcon-2017/serverless/DSC_0561.JPG" alt=""><br><img src="qcon-2017/serverless/DSC_0562.JPG" alt=""><br>the talk is mainly about amazon aws.<br>api gateway is routing as a service. this is what makes serverless ultimately possible.<br>swagger or &quot;click around a lot&quot;.<br>so the architecture is more or less html + js -&gt; api gateway -&gt; lamda<br><img src="qcon-2017/serverless/DSC_0563.JPG" alt=""></p><p>would be nice to have in our infra!</p><p>why serverless?</p><ul><li>ops: <del>#noops</del></li><li>#lessops</li><li>benchmarks</li><li>fallbacks</li><li>load testing</li><li>monitornig</li><li>scaling: up AND down</li><li>single function deployments</li></ul><p>vendor lockin? yes, it is a problem. serverless framework tries to abstract that away, hopfully we will get there.  </p><p>granularity on functions as a service compared to microservices: you can do microservices with faas.</p><h2 id="Enabling-Innovation-at-Uber-Speed"><a href="#Enabling-Innovation-at-Uber-Speed" class="headerlink" title="Enabling Innovation at Uber Speed"></a>Enabling Innovation at Uber Speed</h2><p><img src="qcon-2017/serverless/DSC_0566.JPG" alt=""></p><p>innovation is really important for uber, the team has to enable it.</p><p><img src="qcon-2017/uber/DSC_0567.JPG" alt=""><br><img src="qcon-2017/uber/DSC_0568.JPG" alt=""><br><img src="qcon-2017/uber/DSC_0569.JPG" alt=""></p><p>workation<br><img src="qcon-2017/uber/DSC_0570.JPG" alt=""></p><p>you go there, and work on your idea for a week/10 days, and then you come back.<br>&quot;find the perfect match both in terms of skill and cultural fit&quot;<br>...<br>we hire great people, and we need to empower them and keep them motivated, and blabla...  </p><p>it&#39;s ok to fail. postmortems are really important because we want to understand what went wrong.  </p><h2 id="Continuous-Performance-Testing"><a href="#Continuous-Performance-Testing" class="headerlink" title="Continuous Performance Testing"></a>Continuous Performance Testing</h2><p><img src="qcon-2017/cpt/DSC_0573.JPG" alt=""><br><img src="qcon-2017/cpt/DSC_0575.JPG" alt=""></p><p>once upon a time, when there was a new release, on the lunch break everybody logged on and tested the app.<br>now we use tools to do it, and run it as part of jenkins or our ci.<br>keep the numbers, so we see how the speed changes over time. if there are regressions we can handle them.  </p><p>different types of benchmarks and when they make sense:<br><img src="qcon-2017/cpt/DSC_0576.JPG" alt=""><br><img src="qcon-2017/cpt/DSC_0577.JPG" alt=""><br><img src="qcon-2017/cpt/DSC_0578.JPG" alt=""></p><h2 id="Async-or-Bust"><a href="#Async-or-Bust" class="headerlink" title="Async or Bust!?"></a>Async or Bust!?</h2><p><img src="qcon-2017/async/DSC_0579.JPG" alt=""><br><img src="qcon-2017/async/DSC_0580.JPG" alt=""><br><img src="qcon-2017/async/DSC_0581.JPG" alt=""></p><p>so async or sync? all we want is the simplicity of sync to reason about the code, but the efficiency of asncronicity: do something while we wait.<br>talk goes on on how to handle async code, but in the end async is just a different paradigm:</p><ul><li>callbacks, <code>async</code>, ...</li><li>handle errors like events</li></ul><p><img src="qcon-2017/async/DSC_0582.JPG" alt=""></p><h2 id="Rebuilding-The-Monolith-With-Composable-Apps"><a href="#Rebuilding-The-Monolith-With-Composable-Apps" class="headerlink" title="Rebuilding The Monolith With Composable Apps"></a>Rebuilding The Monolith With Composable Apps</h2><p><img src="qcon-2017/monolyths/DSC_0583.JPG" alt=""></p><p>skybet had a php app that was really convulted and made of bad code, but it worked and was used a lot.<br><img src="qcon-2017/monolyths/DSC_0584.JPG" alt=""><br><img src="qcon-2017/monolyths/DSC_0585.JPG" alt=""><br><img src="qcon-2017/monolyths/DSC_0587.JPG" alt=""><br><img src="qcon-2017/monolyths/DSC_0588.JPG" alt=""><br><img src="qcon-2017/monolyths/DSC_0589.JPG" alt=""><br><img src="qcon-2017/monolyths/DSC_0590.JPG" alt=""></p><p>they needed to implement some things that could not be done with the old architecture (live updates, be fast, ...), so they choose a new architecture based on the same old js -&gt; api -&gt; db, and started to refactor pieces of the old app, until most of the old app was made using the new tech (openkat!).</p><p><img src="qcon-2017/monolyths/DSC_0591.JPG" alt=""></p><p>with react they could partially do that.</p><h1 id="day-2"><a href="#day-2" class="headerlink" title="day 2"></a>day 2</h1><h2 id="Engineering-You"><a href="#Engineering-You" class="headerlink" title="Engineering You"></a>Engineering You</h2><p>QCon tries to make you stay one step ahead of the adoption curve.<br><img src="qcon-2017/DSC_0593.JPG" alt=""><br><img src="qcon-2017/DSC_0594.JPG" alt=""></p><p>Keynote: we need to be more inclusive in our industry.</p><h2 id="Architectural-Overhaul-Ad-Serving-Spotify-Scale"><a href="#Architectural-Overhaul-Ad-Serving-Spotify-Scale" class="headerlink" title="Architectural Overhaul: Ad Serving @Spotify Scale"></a>Architectural Overhaul: Ad Serving @Spotify Scale</h2><p><img src="qcon-2017/spotify/DSC_0597.JPG" alt=""><br><img src="qcon-2017/spotify/DSC_0598.JPG" alt=""><br>the ad serving at spotify is a powerful messaging platform:</p><p><img src="qcon-2017/spotify/DSC_0599.JPG" alt=""><br><img src="qcon-2017/spotify/DSC_0600.JPG" alt=""></p><p>two main parts: the client and the ad server.  </p><p>the ad server had to be refactored because</p><ul><li>it had logic in the client</li><li>did not scale</li></ul><p><img src="qcon-2017/spotify/DSC_0601.JPG" alt=""></p><p>how? keep the existing api so the change is transparent for the client.<br>took about 18 months.  </p><p>in the second stage the client was replaced.<br>it was a big monolyth that was refactored into services.  </p><p><img src="qcon-2017/spotify/DSC_0602.JPG" alt=""></p><p>so the logic was independent and we could change things without breaking completely unrelated things.  </p><h2 id="Scaling-Facebook-Live-Videos-to-a-Billion-Users"><a href="#Scaling-Facebook-Live-Videos-to-a-Billion-Users" class="headerlink" title="Scaling Facebook Live Videos to a Billion Users"></a>Scaling Facebook Live Videos to a Billion Users</h2><p><img src="qcon-2017/facebook/DSC_0604.JPG" alt=""><br><img src="qcon-2017/facebook/DSC_0606.JPG" alt=""></p><p>1.23 billio access facebook every day.<br>we have to make sure there people get the best experience possible<br>facebook live is used to share moments with followers as they are happening.<br>everything started at a hackaton in april 2015. a hackaton at facebook is an short event where some people come together and do something. people are asked not to do work related things during hackathons.<br>a few months later afeter the hackathon &quot;mentions&quot; launched in august 2015. in december 2015 &quot;users&quot; launched.<br>so from 0 to production in 8 months. and everything we launch has to scale to 1 billion users.  </p><p><img src="qcon-2017/facebook/DSC_0607.JPG" alt=""></p><p>there are local pops where users connect, and pops send data between them on big pipes.<br>facebook live is different from other video platforms, because</p><ul><li>the videos are created in real time and can thus not be cached</li><li>we do not know what video becomes most pupular</li></ul><p>we want to go from 0 to production in 4 months and to all users in 8 months.</p><p>choosing a protocol for live video:<br><img src="qcon-2017/facebook/DSC_0608.JPG" alt=""><br><img src="qcon-2017/facebook/DSC_0609.JPG" alt=""></p><p>broadcast client -&gt; pop -&gt; datacenter<br>the pop has scriptable logic: for example it can decide on wich datacenter to store the video based on load balancing logic.  </p><p>complicated logic with video ids to handle cell phone disconnections and datacenter encoders downtime.  </p><p>low bandwith has to be handled with adaptive bitrate and buffering on the client.<br><img src="qcon-2017/facebook/DSC_0610.JPG" alt=""></p><h2 id="Shaving-My-Head-Made-Me-A-Better-Programmer"><a href="#Shaving-My-Head-Made-Me-A-Better-Programmer" class="headerlink" title="Shaving My Head Made Me A Better Programmer"></a>Shaving My Head Made Me A Better Programmer</h2><p>A female github employee had the impression she was not beeing taken seriously by her male coworkers, so she shaved her head and saw that people started to ask her technical questions.<br><img src="qcon-2017/shave/DSC_0611.JPG" alt=""></p><p>Talk about why a diverse environment is important and how to archive it.<br><img src="qcon-2017/shave/DSC_0612.JPG" alt=""><br><img src="qcon-2017/shave/DSC_0613.JPG" alt=""><br><img src="qcon-2017/shave/DSC_0614.JPG" alt=""><br><img src="qcon-2017/shave/DSC_0615.JPG" alt=""></p><h2 id="cgroupv2-Linux-39-s-New-Unified-Control-Group-System"><a href="#cgroupv2-Linux-39-s-New-Unified-Control-Group-System" class="headerlink" title="cgroupv2: Linux&#39;s New Unified Control Group System"></a>cgroupv2: Linux&#39;s New Unified Control Group System</h2><p><img src="qcon-2017/cgroups/DSC_0617.JPG" alt=""></p><p>why care about cgroups</p><ul><li>100.000+ servers</li><li>many thausands of services</li><li>wanto ro limit failure domains</li></ul><p>need to limit resources to make them available to stuff that needs it<br><img src="qcon-2017/cgroups/DSC_0618.JPG" alt=""><br><img src="qcon-2017/cgroups/DSC_0619.JPG" alt=""><br><img src="qcon-2017/cgroups/DSC_0620.JPG" alt=""></p><p><a href="https://www.kernel.org/doc/Documentation/cgroup-v2.txt">https://www.kernel.org/doc/Documentation/cgroup-v2.txt</a></p><p>use at fb:<br><img src="qcon-2017/cgroups/DSC_0621.JPG" alt=""></p><h2 id="Multi-host-Multi-network-Persistent-Containers"><a href="#Multi-host-Multi-network-Persistent-Containers" class="headerlink" title="Multi-host, Multi-network Persistent Containers"></a>Multi-host, Multi-network Persistent Containers</h2><p>starts with the conclusion :)<br><img src="qcon-2017/containers-state/DSC_0623.JPG" alt=""></p><p>apps in containers are stateless, but databases and filesystems sometimes need state.</p><p>traditional (broken) development model<br><img src="qcon-2017/containers-state/DSC_0624.JPG" alt=""></p><p>broken because once stuff lands in production it breaks in subtle ways - fixed with containers.</p><p>so how do we keep state with containers?<br>using the cloud is not a great idea, because if you are going to become vendor dependent just buy in on that vendor and use them for everything.<br><img src="qcon-2017/containers-state/DSC_0625.JPG" alt=""><br><img src="qcon-2017/containers-state/DSC_0626.JPG" alt=""></p><p>two ways to map persistent storage:<br>network attached: use a network fs like ciph<br>local attached: docker has <code>--volumes-from</code> to use containers that contain only storage to use for database containers.  </p><p>aerospike:<br><img src="qcon-2017/containers-state/DSC_0627.JPG" alt=""></p><p>just expose the aerospike with haproxy on the internet<br><img src="qcon-2017/containers-state/DSC_0628.JPG" alt=""></p><p>summary<br><img src="qcon-2017/containers-state/DSC_0629.JPG" alt=""></p><h2 id="Dev-to-Prod-in-5-minutes-Is-Your-Company-Ready"><a href="#Dev-to-Prod-in-5-minutes-Is-Your-Company-Ready" class="headerlink" title="Dev to Prod in 5 minutes: Is Your Company Ready?"></a>Dev to Prod in 5 minutes: Is Your Company Ready?</h2><p><img src="qcon-2017/5mins/DSC_0630.JPG" alt=""></p><p>the standard git development pipeline<br><img src="qcon-2017/5mins/DSC_0631.JPG" alt=""></p><p>but people don&#39;t understand it.<br>cultural changes are hard. at netflix if you deploy it you own it.<br>if you try to bring change in the company, think of you as someone who can not do this by yourself, nobody listens to you, you don&#39;t have the influence.  </p><ul><li>choose allies</li><li>build the right team (take the people that read hacker news, that look at now technologies, that go to conferences, ...)</li><li>choose the right project</li><li>small iterations</li><li>embrace failure (the project may fail, but you will see what went wrong, iterate)</li><li>be ready for inception (people don&#39;t like change, but when they see git push and brrrr they will come)</li><li>seek professional help (the idea is that you are going to be the baseline for the company, so if you start with a bad example, people will follow that, because they don&#39;t know. so try to make it right.)</li></ul><p><img src="qcon-2017/5mins/DSC_0632.JPG" alt=""></p><h1 id="day-3"><a href="#day-3" class="headerlink" title="day 3"></a>day 3</h1><h2 id="Our-Concurrent-Past-Our-Distributed-Future"><a href="#Our-Concurrent-Past-Our-Distributed-Future" class="headerlink" title="Our Concurrent Past; Our Distributed Future"></a>Our Concurrent Past; Our Distributed Future</h2><p><img src="qcon-2017/DSC_0633.JPG" alt=""><br><img src="qcon-2017/DSC_0634.JPG" alt=""><br><img src="qcon-2017/DSC_0635.JPG" alt=""><br><img src="qcon-2017/DSC_0636.JPG" alt=""></p><h2 id="Avoiding-Alerts-Overload-From-Microservices"><a href="#Avoiding-Alerts-Overload-From-Microservices" class="headerlink" title="Avoiding Alerts Overload From Microservices"></a>Avoiding Alerts Overload From Microservices</h2><p><img src="qcon-2017/alerts/DSC_0641.JPG" alt=""><br><img src="qcon-2017/alerts/DSC_0642.JPG" alt=""></p><p>knowing when there is a problem is not enough. What you want is get a notification when you need to act. everything else is just noise.</p><p><img src="qcon-2017/alerts/DSC_0643.JPG" alt=""></p><p>monitoring microservices is very different than monitoring a monolyth. monitoring is harder because you have a lot more services.</p><ol><li>build a system that you can support.  </li></ol><p>basic tools:</p><ul><li>logging with log aggregation</li><li>monitoring (we use nagios - financial times)</li></ul><p>only get an alert when we lose all services in the cluster. if one goes down, who cares as long as the system is up.<br>we had a very bad idea: make the monitoring screens shift automatically from page 1 -&gt; 2 and it was never on the page we needed.<br><img src="qcon-2017/alerts/DSC_0644.JPG" alt=""><br>a click takes you to more detail</p><p>to graph stuff we use graphite -&gt; grafana</p><p><img src="qcon-2017/alerts/DSC_0645.JPG" alt=""><br>we need to understand how to map the service requests to an http request, so we intoduced <code>transaction_ids</code>. made a java servlet filter so it&#39;s easy to integrate. so if you want to debug something, and know the transaction id, you can see all the services involved.</p><ol><li>concentrate on the stuff that matters</li></ol><p>if the first attempt failed, but the second got through, i don&#39;t really care about the first failure, because basically the thing worked. monitor the business services</p><ol><li>cultivate your alerts</li></ol><p>make sure each alert is great!</p><p>bad:<br><img src="qcon-2017/alerts/DSC_0646.JPG" alt=""></p><p>good:<br><img src="qcon-2017/alerts/DSC_0647.JPG" alt=""></p><p>make sure alerts can&#39;t be missed.<br>use the right comunication channels.  </p><p>support isn&#39;t just getting the system fixed: we need all to know what happened, how it was fixed, ...<br><img src="qcon-2017/alerts/DSC_0649.JPG" alt=""></p><p><img src="qcon-2017/alerts/DSC_0650.JPG" alt=""><br>this is important because otherwise people build stuff that breaks.</p><p>if you did&#39;nt get an alert, and things did go wrong, something is wrong. you need to fix it. setting up an alert is part of fixing the problem.</p><p><img src="qcon-2017/alerts/DSC_0651.JPG" alt=""><br>you need to make sure that if things break, stuff still works and alerts work. so break things.  </p><ul><li>netflix chaos monkey</li><li>ft chaos snail</li></ul><p>find ways to share what&#39;s changing. we do lot&#39;s of showcases.</p><h2 id="Do-You-Really-Know-Your-Response-Times"><a href="#Do-You-Really-Know-Your-Response-Times" class="headerlink" title="Do You Really Know Your Response Times?"></a>Do You Really Know Your Response Times?</h2><p><img src="qcon-2017/response/DSC_0652.JPG" alt=""></p><p><img src="qcon-2017/response/DSC_0655.JPG" alt=""></p><p>so how do we measure these things?<br>sending the metrics from the app is not the solution because it can&#39;t measure itself.</p><p><img src="qcon-2017/response/DSC_0656.JPG" alt=""></p><p>dropwizard metrics library.  </p><p>if something goes wrong, managers want numbers. and these numbers come from these dashboards.</p><p><img src="qcon-2017/response/DSC_0657.JPG" alt=""></p><h2 id="Real-World-Java-9"><a href="#Real-World-Java-9" class="headerlink" title="Real World Java 9"></a>Real World Java 9</h2><p>lot&#39;s of cool new features, one of the biggest one is <a href="http://openjdk.java.net/projects/jigsaw/">jigsaw</a>.</p><p>case study:<br><img src="qcon-2017/java9/DSC_0658.JPG" alt=""></p><p>(speaker starts the ide and it takes forever. people laugh.)</p><p>the speaker makes a jigsaw module. my impression is that it is a lot of pain: the speaker says there is a lot of trial &amp; error. no automatic creation for the module info file.</p><p><img src="qcon-2017/java9/DSC_0659.JPG" alt=""></p><p>speaker says it&#39;s not producion ready.</p><p>speaker implements (live!) a reactive api.<br>at the end she says &quot;so now, it does exactly the same thing as before, but with slightly more code.&quot;</p><p>more demos of java 9 features</p><ul><li>streams api</li><li>collections convenience methods</li><li>additions to interfaces</li></ul><p>takeaway points from the speaker: don&#39;t jigsaw jour app just jet. it&#39;s too early.</p><h2 id="Monitoring-Serverless-Architectures"><a href="#Monitoring-Serverless-Architectures" class="headerlink" title="Monitoring Serverless Architectures"></a>Monitoring Serverless Architectures</h2><p><img src="qcon-2017/monitoring/DSC_0660.JPG" alt=""></p><p><img src="qcon-2017/monitoring/DSC_0661.JPG" alt=""><br>&quot;sure! what went wrong? can i se the error?&quot;<br>&quot;we don&#39;t know&quot;<br>&quot;can i see the logs?&quot;<br>&quot;yeah, but you need to talk to the ops&quot;<br>and after a few hours you look like this<br><img src="qcon-2017/monitoring/DSC_0662.JPG" alt=""></p><p>so why go serverless?</p><ul><li>it&#39;s more secure</li><li>it scales up and down</li><li>you don&#39;t need infrasructure on your own</li><li>operations: there is a lot of talk about devops, ops, .. in the end it does not matter. you want the services to be up, and serverless gives you that</li></ul><p>serverless building blocks</p><ul><li>aws lamda</li><li>aws api gateway</li><li>aws dynamodb</li><li>aws kinesis streams (pub-sub)</li><li>lots more ...</li></ul><p><img src="qcon-2017/monitoring/DSC_0663.JPG" alt=""></p><p>with cloudwatch you can monitor almost anything in all services you use.</p><ul><li>logging</li><li>events</li></ul><p><img src="qcon-2017/monitoring/DSC_0664.JPG" alt=""></p><p>health checks: route53<br>tracing: aws x-ray<br>auditing: aws cludtrail</p><p><strong>the future</strong>: we are in the early stages, but we are headed to total visibility and observability. monitoring is becoming a comodity: it&#39;s just one more of the services.</p><p><img src="qcon-2017/monitoring/DSC_0665.JPG" alt=""><br><img src="qcon-2017/monitoring/DSC_0666.JPG" alt=""></p><h2 id="Big-Ideas-Decentralized-Storage"><a href="#Big-Ideas-Decentralized-Storage" class="headerlink" title="Big Ideas: Decentralized Storage"></a>Big Ideas: Decentralized Storage</h2><p><img src="qcon-2017/storage/DSC_0667.JPG" alt=""></p><p>put data in the cloud without losing control.</p><p><img src="qcon-2017/storage/DSC_0668.JPG" alt=""></p><p>save the data on hosts that gain money if they store your data with blockchain smart contracts.</p><p>ok it&#39;s late.. time to go home.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;qcon-2017/DSC_0545.JPG&quot; alt=&quot;qcon london 2017&quot;&gt;&lt;br&gt;&lt;img src=&quot;qcon-2017/DSC_0565.JPG&quot; alt=&quot;qcon london 2017&quot;&gt;&lt;br&gt;&lt;img src=&quot;qcon-
      
    
    </summary>
    
    
      <category term="javascript" scheme="http://31337.it/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>Look ma, no framework!</title>
    <link href="http://31337.it/look-ma-no-framework/"/>
    <id>http://31337.it/look-ma-no-framework/</id>
    <published>2016-11-09T23:00:00.000Z</published>
    <updated>2024-11-08T20:02:45.110Z</updated>
    
    <content type="html"><![CDATA[<p>I really like making web apps. So I thought I could write down how I do it. Maybe someone likes it.</p><h2 id="Make-an-app-with-just-a-few-libraries"><a href="#Make-an-app-with-just-a-few-libraries" class="headerlink" title="Make an app with just a few libraries"></a>Make an app with just a few libraries</h2><p>So we are going to make a task list.<br>What I usually do is start with an index.html file and an index.js file:</p><figure class="highlight html"><figcaption><span>index.html</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;https://cdnjs.cloudflare.com/ajax/libs/jquery/3.1.0/jquery.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;app.css&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;index.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>I like jQuery. It made my life easier for many years, and it makes it really easy to change the dom and make ajax calls. So I include that in my html file. The latest browsers make jQuery <em>almost</em> useless, but it&#39;s still nice to have it around for a lot of things for now.<br>Usually I also add an <code>app.css</code> stylesheet file, so I can add custom styles to my app if I need to. This file will be empty at the beginning, but since I know I will be using this I add it now already.</p><figure class="highlight javascript"><figcaption><span>index.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params">$</span>) </span>&#123;</span><br><span class="line"><span class="comment">//future code goes here</span></span><br><span class="line">&#125;)(jQuery)</span><br></pre></td></tr></table></figure><p>All right. Now we have our base. Let&#39;s add bootstrap for a quick styling and some html for our list of tasks and a form to add a task:</p><figure class="highlight html"><figcaption><span>index.html</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;https://cdnjs.cloudflare.com/ajax/libs/jquery/3.1.0/jquery.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;app.css&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- bootstrap --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css&quot;</span> <span class="attr">integrity</span>=<span class="string">&quot;sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u&quot;</span> <span class="attr">crossorigin</span>=<span class="string">&quot;anonymous&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Tasks<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;panel panel-default&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;panel-body&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">id</span>=<span class="string">&quot;add-task-form&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-inline&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;task&quot;</span> <span class="attr">class</span>=<span class="string">&quot;control-label&quot;</span>&gt;</span>New task<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span> <span class="attr">id</span>=<span class="string">&quot;task&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-default&quot;</span> <span class="attr">id</span>=<span class="string">&quot;add-task&quot;</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span>&gt;</span>Add<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- our tasks go here --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ol</span> <span class="attr">id</span>=<span class="string">&quot;task-list&quot;</span> <span class="attr">class</span>=<span class="string">&quot;list-group&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;index.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>We have the first <em>screen</em> of our app inside the <code>index.html</code> file. This is not that nice, because if we have to add more screens later we clutter our <code>index.html</code> file with all the screens our app will have. So we will have to move this out later.<br>Let&#39;s add the <em>add task</em> functionality to our app:</p><figure class="highlight javascript"><figcaption><span>index.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params">$</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">$(<span class="built_in">document</span>).on(<span class="string">&#x27;submit&#x27;</span>, <span class="string">&#x27;#add-task-form&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">ev</span>) </span>&#123;</span><br><span class="line">ev.preventDefault();</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> newTask = <span class="string">&#x27;&lt;li class=&quot;list-group-item&quot;&gt;&#x27;</span> + $(<span class="string">&#x27;#task&#x27;</span>).val() + <span class="string">&#x27;&lt;/li&gt;&#x27;</span>;</span><br><span class="line">$(<span class="string">&#x27;#task-list&#x27;</span>).append(newTask);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">&#125;)(jQuery)</span><br></pre></td></tr></table></figure><p>Here we go. We can add tasks to our list. Let&#39;s make it a little bit nicer with some margin in out <code>app.css</code>:</p><figure class="highlight css"><figcaption><span>app.css</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#task-list</span> &#123;</span><br><span class="line"><span class="attribute">margin-top</span>: <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="look-ma-no-framework/task-list.png" alt="Task list"></p><p>But there is one thing that really stands out in the code above: we mixed JavaScript with html, and that gets messy fast.<br>Let&#39;s split that out with a templating engine. I really like <a href="look-ma-no-framework/ejs.js">ejs</a>, but anything will do. <a href="http://handlebarsjs.com/">handlebars</a> is also nice.</p><p>First we add a script tag to include ejs. Let&#39;s add it do a directory <code>libs</code>, so it&#39;s a bit out of the way:<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;libs/ejs.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>then we create a new file <code>views/task-item.ejs</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;list-group-item&quot;</span>&gt;</span>&lt;%= title %&gt;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br></pre></td></tr></table></figure><p>and now let&#39;s change our JavaScript<br>from<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> newTask = <span class="string">&#x27;&lt;li class=&quot;list-group-item&quot;&gt;&#x27;</span> + $(<span class="string">&#x27;#task&#x27;</span>).val() + <span class="string">&#x27;&lt;/li&gt;&#x27;</span>;</span><br><span class="line">$(<span class="string">&#x27;#task-list&#x27;</span>).append(newTask);</span><br></pre></td></tr></table></figure><br>to<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&#x27;#task-list&#x27;</span>).append(<span class="string">&#x27;views/task-item.ejs&#x27;</span>, &#123;<span class="attr">title</span>: $(<span class="string">&#x27;#task&#x27;</span>).val()&#125;);</span><br></pre></td></tr></table></figure><br>we don&#39;t gain much in this example, but when the view grows and has more markup, the advantage becomes more obvious.</p><p>Let&#39;s do the same with the whole first screen we put in <code>index.html</code> at the beginning:<br>and our <code>index.html</code> becomes</p><figure class="highlight html"><figcaption><span>index.html</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;https://cdnjs.cloudflare.com/ajax/libs/jquery/3.1.0/jquery.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;libs/ejs.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;app.css&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- bootstrap --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css&quot;</span> <span class="attr">integrity</span>=<span class="string">&quot;sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u&quot;</span> <span class="attr">crossorigin</span>=<span class="string">&quot;anonymous&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;index.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>and we move the main content out to it&#39;s own view file:</p><figure class="highlight html"><figcaption><span>views/tasks.ejs</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Tasks<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;panel panel-default&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;panel-body&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">id</span>=<span class="string">&quot;add-task-form&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-inline&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;task&quot;</span> <span class="attr">class</span>=<span class="string">&quot;control-label&quot;</span>&gt;</span>New task<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span> <span class="attr">id</span>=<span class="string">&quot;task&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-default&quot;</span> <span class="attr">id</span>=<span class="string">&quot;add-task&quot;</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span>&gt;</span>Add<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- our tasks go here --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ol</span> <span class="attr">id</span>=<span class="string">&quot;task-list&quot;</span> <span class="attr">class</span>=<span class="string">&quot;list-group&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>and render it:<br><figure class="highlight javascript"><figcaption><span>index.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params">$</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//events</span></span><br><span class="line">$(<span class="built_in">document</span>).on(<span class="string">&#x27;submit&#x27;</span>, <span class="string">&#x27;#add-task-form&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">ev</span>) </span>&#123;</span><br><span class="line">ev.preventDefault();</span><br><span class="line"></span><br><span class="line">$(<span class="string">&#x27;#task-list&#x27;</span>).append(<span class="string">&#x27;views/task-item.ejs&#x27;</span>, &#123;<span class="attr">title</span>: $(<span class="string">&#x27;#task&#x27;</span>).val()&#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">//initial page setup</span></span><br><span class="line">$(<span class="string">&#x27;.container&#x27;</span>).html(<span class="string">&#x27;views/tasks.ejs&#x27;</span>, &#123;&#125;);</span><br><span class="line"></span><br><span class="line">&#125;)(jQuery)</span><br></pre></td></tr></table></figure></p><p>Better.</p><p>Now we need some way for the user to delete a task. Let&#39;s add a delete button:<br><figure class="highlight html"><figcaption><span>views/task-item.ejs</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;list-group-item&quot;</span>&gt;</span>&lt;%= title %&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:///&quot;</span> <span class="attr">class</span>=<span class="string">&quot;remove-task&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;glyphicon glyphicon-remove pull-right&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>and now we handle the event:<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="built_in">document</span>).on(<span class="string">&#x27;click&#x27;</span>, <span class="string">&#x27;.remove-task&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">ev</span>) </span>&#123;</span><br><span class="line"><span class="keyword">var</span> task = $(ev.currentTarget).parent();</span><br><span class="line">task.remove();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><p><img src="look-ma-no-framework/task-list-with-delete.png" alt="Task list with an awesome delete button"></p><p>easy.</p><p>Alright. That&#39;s it.<br>There are of course a lot of things missing in this example, but I saw that I can go a long way with this simple setup. A really long way.<br>After a while <code>index.js</code> becomes a few thousand lines, and the <code>views</code> folder becomes cluttered up with a lot of views for different components and screens.<br><em>When</em> and <em>if</em> the app becomes so big that that becomes an issue, we need to start to organize our code better.<br>At that point we need to refactor our directory structure and start using a dependency manager. But that&#39;s for the next post! ☺</p><p>The example we coded is up on github <a href="https://github.com/S2-/tasks">here</a>.<br>The talk I made on this topic was recorded and put online <a href="https://vimeo.com/194045644">here</a>.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;I really like making web apps. So I thought I could write down how I do it. Maybe someone likes it.&lt;/p&gt;
&lt;h2 id=&quot;Make-an-app-with-just-a-f
      
    
    </summary>
    
    
      <category term="javascript" scheme="http://31337.it/tags/javascript/"/>
    
  </entry>
  
</feed>
